# Generated by Django 2.1.7 on 2020-08-06 11:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import models_app.models
import utilities.image_validation


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('categoryId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(choices=[('Lesson', 'Lesson'), ('Exam', 'Exam'), ('Quize', 'Quize'), ('General knowledy', 'General knowledy')], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamBlankSpaceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamChoiceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ExamDescribeQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradeModel',
            fields=[
                ('gradeId', models.AutoField(primary_key=True, serialize=False)),
                ('gradeTitle', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='LanguageModel',
            fields=[
                ('languageId', models.AutoField(primary_key=True, serialize=False)),
                ('languageName', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='MatchingInstructionModel',
            fields=[
                ('instructionId', models.AutoField(primary_key=True, serialize=False)),
                ('instructionText', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MatchingPosibleAnswersModels',
            fields=[
                ('matchingId', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=1)),
                ('optionText', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruction_posible', to='models_app.MatchingInstructionModel')),
            ],
            options={
                'ordering': ('label',),
            },
        ),
        migrations.CreateModel(
            name='MatchingQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('questionText', models.TextField()),
                ('answer', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruction_question', to='models_app.MatchingInstructionModel')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name="Answer's text here.")),
                ('is_correct', models.BooleanField(default=False)),
                ('label', models.CharField(max_length=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_option', to='models_app.ExamChoiceQuestionModel')),
            ],
        ),
        migrations.CreateModel(
            name='QuizeBlankSpaceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeChoiceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(choices=[(1, 'optionOne'), (2, 'optionTwo'), (3, 'optionThree'), (4, 'optionFour'), (5, 'optionFive'), (6, 'optionSix')], max_length=100)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeDescribeQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeMatchingInstructionModel',
            fields=[
                ('instructionId', models.AutoField(primary_key=True, serialize=False)),
                ('instructionText', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeMatchingPosibleAnswersModels',
            fields=[
                ('matchingId', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=1)),
                ('optionText', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quize_instruction_posible', to='models_app.MatchingInstructionModel')),
            ],
            options={
                'ordering': ('label',),
            },
        ),
        migrations.CreateModel(
            name='QuizeMatchingQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('questionText', models.TextField()),
                ('answer', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quize_instruction_question', to='models_app.MatchingInstructionModel')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='QuizeMatchQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name="Answer's text here.")),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quize_option', to='models_app.QuizeChoiceQuestionModel')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectModel',
            fields=[
                ('subjectId', models.AutoField(primary_key=True, serialize=False)),
                ('subjectName', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_subejct', to='models_app.GradeModel')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TransactionModel',
            fields=[
                ('transactionId', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_transaction', to='models_app.GradeModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_transaction', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnitModel',
            fields=[
                ('unitId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('pdf', models.FileField(upload_to=models_app.models.upload_path, validators=[utilities.image_validation.validate_image])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_category', to='models_app.CategoryModel')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='quizematchquestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dmatch_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizematchinginstructionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_instruction', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizedescribequestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='describe_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizechoicequestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizeblankspacequestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blank_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='matchinginstructionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_instruction', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='grademodel',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language_category', to='models_app.LanguageModel'),
        ),
        migrations.AddField(
            model_name='examdescribequestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='describe_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='examchoicequestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='examblankspacequestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blank_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='categorymodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_subejct', to='models_app.SubjectModel'),
        ),
        migrations.AlterUniqueTogether(
            name='unitmodel',
            unique_together={('name', 'category')},
        ),
        migrations.AlterUniqueTogether(
            name='subjectmodel',
            unique_together={('grade', 'subjectName')},
        ),
        migrations.AlterUniqueTogether(
            name='quizematchingquestionmodel',
            unique_together={('instruction', 'number'), ('instruction', 'answer'), ('instruction', 'questionText')},
        ),
        migrations.AlterUniqueTogether(
            name='quizematchingposibleanswersmodels',
            unique_together={('instruction', 'label'), ('instruction', 'optionText')},
        ),
        migrations.AlterUniqueTogether(
            name='options',
            unique_together={('question', 'label'), ('question', 'text')},
        ),
        migrations.AlterUniqueTogether(
            name='matchingquestionmodel',
            unique_together={('instruction', 'number'), ('instruction', 'answer'), ('instruction', 'questionText')},
        ),
        migrations.AlterUniqueTogether(
            name='matchingposibleanswersmodels',
            unique_together={('instruction', 'label'), ('instruction', 'optionText')},
        ),
        migrations.AlterUniqueTogether(
            name='grademodel',
            unique_together={('language', 'gradeTitle')},
        ),
        migrations.AlterUniqueTogether(
            name='categorymodel',
            unique_together={('title', 'subject')},
        ),
    ]
