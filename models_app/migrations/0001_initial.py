# Generated by Django 2.1.7 on 2020-07-31 19:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('categorytId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ExamBlankSpaceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamChoiceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('optionOne', models.TextField(max_length=1000)),
                ('optionTwo', models.TextField(max_length=1000)),
                ('optionThree', models.TextField(max_length=1000)),
                ('optionFour', models.TextField(blank=True, max_length=1000, null=True)),
                ('optionFive', models.TextField(blank=True, max_length=1000, null=True)),
                ('optionSix', models.TextField(blank=True, max_length=1000, null=True)),
                ('answer', models.CharField(choices=[(1, 'optionOne'), (2, 'optionTwo'), (3, 'optionThree'), (4, 'optionFour'), (5, 'optionFive'), (6, 'optionSix')], max_length=100)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ExamDescribeQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamMatchQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradeModel',
            fields=[
                ('gradeId', models.AutoField(primary_key=True, serialize=False)),
                ('gradeTitle', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='LanguageModel',
            fields=[
                ('languageId', models.AutoField(primary_key=True, serialize=False)),
                ('languageName', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='QuizeBlankSpaceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeChoiceQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('optionOne', models.TextField(max_length=1000)),
                ('optionTwo', models.TextField(max_length=1000)),
                ('optionThree', models.TextField(max_length=1000)),
                ('optionFour', models.TextField(blank=True, max_length=1000, null=True)),
                ('optionFive', models.TextField(blank=True, max_length=1000, null=True)),
                ('optionSix', models.TextField(blank=True, max_length=1000, null=True)),
                ('answer', models.CharField(choices=[(1, 'optionOne'), (2, 'optionTwo'), (3, 'optionThree'), (4, 'optionFour'), (5, 'optionFive'), (6, 'optionSix')], max_length=100)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='QuizeDescribeQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizeMatchQuestionModel',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=1000)),
                ('answer', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectModel',
            fields=[
                ('subjectId', models.AutoField(primary_key=True, serialize=False)),
                ('subjectName', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_subejct', to='models_app.GradeModel')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TransactionModel',
            fields=[
                ('transactionId', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_transaction', to='models_app.GradeModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_transaction', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnitModel',
            fields=[
                ('unitId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_unit', to='models_app.SubjectModel')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='quizematchquestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dmatch_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizedescribequestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='describe_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizechoicequestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='quizeblankspacequestionmodel',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blank_unit', to='models_app.UnitModel'),
        ),
        migrations.AddField(
            model_name='grademodel',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language_subejct', to='models_app.LanguageModel'),
        ),
        migrations.AddField(
            model_name='exammatchquestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='examdescribequestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='describe_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='examchoicequestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='examblankspacequestionmodel',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blank_subject', to='models_app.SubjectModel'),
        ),
        migrations.AddField(
            model_name='categorymodel',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_category', to='models_app.GradeModel'),
        ),
        migrations.AlterUniqueTogether(
            name='grademodel',
            unique_together={('language', 'gradeTitle')},
        ),
    ]
